"""
Django settings for game project.

Generated by 'django-admin startproject' using Django 4.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os
import sys
from celery.schedules import crontab, timedelta


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-t615sg@_o=g#&ka&*!r41o8u^x%mq^$ag=^b5)rz-si7x-^a8q'

# SECURITY WARNING: don't run with debug turned on in production!
RUNTIME_MODE = os.environ.get("DJANGO_RUNTIME_MODE", "dev")  # 可选值：dev, prod, review
DEBUG = False if RUNTIME_MODE in ["prod", "review"] else True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # rest_framework
    'rest_framework',
    'rest_framework.authtoken',
]

# 自定义应用
GAME_APPS = [
    'applications.tests.apps.TestsConfig',
    'applications.user.apps.UserConfig',
    'applications.games.apps.GamesConfig',
    'applications.message.apps.MessageConfig',
    'applications.order.apps.OrderConfig',
]
INSTALLED_APPS.extend(GAME_APPS)

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'game.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'game.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'game',
        'USER': 'game',
        'PASSWORD': os.environ.get('DEFAULT_MYSQL_PWD', '123456'),
        'HOST': os.environ.get('DEFAULT_MYSQL_HOST', '43.138.21.81'),
        'PORT': os.environ.get('DEFAULT_MYSQL_PORT', '33060'),
    },
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'zh-hans'  # 中文

TIME_ZONE = 'Asia/Shanghai'  # 时区

USE_I18N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

# 静态文件配置
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, "static")

# 文件存储配置
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')  # 默认根目录

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# RestFramework
AUTH_USER_MODEL = 'user.User'
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
        # 'rest_framework.permissions.IsAdminUser',
    ),
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',  # json渲染器
    ),
    'DEFAULT_PARSER_CLASSES': (
        'rest_framework.parsers.JSONParser',  # 解析成功后，request.data类型为dict
    ),
}

# reids配置
REDIS_HOST = os.environ.get("DEFAULT_REDIS_HOST", '43.138.21.81')
REDIS_PORT = os.environ.get("DEFAULT_REDIS_PORT", '63790')
REDIS_DEFAULT_DB = 0
REDIS_SESSION_DB = 1
REDIS_CELERY_DB = 2
REDIS_MAX_CONN = 8
REDIS_PW = os.environ.get("DEFAULT_REDIS_PWD", "123456")

CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": f"redis://{REDIS_HOST}:{REDIS_PORT}/{REDIS_DEFAULT_DB}",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            "CONNECTION_POOL_KWARGS": {"decode_responses": True},
            "PASSWORD": f'{REDIS_PW}'
        },
    },
    "session": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": f"redis://{REDIS_HOST}:{REDIS_PORT}/{REDIS_SESSION_DB}",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            "CONNECTION_POOL_KWARGS": {"decode_responses": True},
            "PASSWORD": f'{REDIS_PW}'
        },
    }
}
SESSION_ENGINE = "django.contrib.sessions.backends.cache"
SESSION_CACHE_ALIAS = "session"

# Celery
CELERY_TIMEZONE = TIME_ZONE
BROKER_URL = f"redis://:{REDIS_PW}@{REDIS_HOST}:{REDIS_PORT}/{REDIS_CELERY_DB}"
CELERY_RESULT_BACKEND = f"redis://:{REDIS_PW}@{REDIS_HOST}:{REDIS_PORT}/{REDIS_CELERY_DB}"
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TASK_RESULT_EXPIRES = 60 * 60 * 24
# CELERY_IMPORTS = ('apis.games.tasks',)
CELERYBEAT_SCHEDULE = {
    # 'set_award_every_30_seconds': {
    #     'task': 'applications.games.tasks.setAwardCelery',
    #     'schedule': timedelta(seconds=1)
    # },
    'set_seconds_every_1_seconds': {
        'task': 'applications.games.tasks.setSecondsCelery',
        'schedule': 1
    }
}

# logging 基础配置
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'standard': {'format': '[%(levelname)s]: %(asctime)s: %(pathname)s: %(lineno)d * %(thread)d: %(message)s'}
    },
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'formatter': 'standard',
            'level': 'DEBUG',
            'stream': sys.stdout
        },
        'file_info': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'formatter': 'standard',
            'filename': os.path.join(BASE_DIR, "log/game/game.log"),
        },
        'file_wf': {
            'level': 'WARNING',
            'class': 'logging.FileHandler',
            'formatter': 'standard',
            'filename': os.path.join(BASE_DIR, "log/game/game.log.wf"),
        }
    },
    'loggers': {
        '': {
            'handlers': ['console', 'file_info', 'file_wf'],
            'level': 'WARNING'
        },
    },
}
