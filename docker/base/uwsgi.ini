[uwsgi]

#the local unix socket file
socket = $(CONTAINER_HOMEWORK)/run/uwsgi.sock
pidfile = $(CONTAINER_HOMEWORK)/run/uwsgi.pid

# the base directory (full path) django 程序的主目录
chdir = $(CONTAINER_HOMEWORK)/$(COMPOSE_PROJECT_NAME)/

# Django's wsgi file
wsgi-file = $(COMPOSE_PROJECT_NAME)/wsgi.py

# maximum number of worker processes
processes = 64

#thread numbers startched in each worker process
threads = 1

#一个高阶的cheap模式，在启动的时候只会分配n个工作进程，并使用自适应算法启动新的进程
cheaper = 4

#在经过sec秒的不活跃状态的进程会被销毁(进入了cheap模式)，并最少保留cheaper指定的进程数
idle = 3600

#设置一个请求的超时时间(秒)，如果一个请求超过了这个时间，则请求被丢弃
harakiri = 60

#当一个请求被harakiri杀掉会，会输出一条日志
harakiri-verbose = true

#开启内存使用情况报告
memory-report = true

#设置平滑的重启（直到处理完接收到的请求）的长等待时间(秒)
reload-mercy = 10

#设置工作进程使用虚拟内存超过N MB就回收重启
reload-on-as= 1024

#自动给进程命名
auto-procname = true

#为进程指定前缀
procname-prefix-spaced = $(COMPOSE_PROJECT_NAME)-

#设置工作进程每处理N个进程就会被回收重启
max-requests=10000

#设置工作进程使用物理内存超过N MB就回收重启
reload-on-rss=100

#设置socket超时时间，默认4秒
socket-timeout=10

#限制http请求体的大小(Bytes)
limit-post=4096000

# clear environment on exit
vacuum = true

#不记录request日志，只记录错误日志
disable-logging = true

# 日志
logto = $(CONTAINER_HOMEWORK)/log/uwsgi/uwsgi.log
